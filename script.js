// === –ë–ï–ó–û–ü–ê–°–ù–´–ô –ó–í–£–ö–û–í–û–ô –§–ò–î–ë–≠–ö ===
let audioCtx = null;
let isAudioEnabled = false;

function initSafeAudio() {
    if (isAudioEnabled) return;
    try {
        const AudioContext = window.AudioContext || window.webkitAudioContext;
        if (AudioContext) {
            audioCtx = new AudioContext();
            isAudioEnabled = true;
        }
    } catch (e) {
        isAudioEnabled = false;
    }
}

function safePlayTone(frequency, duration = 0.15, volume = 0.1) {
    if (!isAudioEnabled || !audioCtx) return;
    try {
        const oscillator = audioCtx.createOscillator();
        const gainNode = audioCtx.createGain();
        oscillator.type = 'sine';
        oscillator.frequency.value = frequency;
        gainNode.gain.value = volume;
        oscillator.connect(gainNode);
        gainNode.connect(audioCtx.destination);
        const now = audioCtx.currentTime;
        oscillator.start(now);
        oscillator.stop(now + duration);
    } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–≤—É–∫–∞
    }
}

function playCorrectSound() {
    if (!isAudioEnabled || !audioCtx) return;

    // –ú–µ–ª–æ–¥–∏—á–Ω—ã–π –∑–≤—É–∫: C5-E5-G5 (–¥–æ-–º–∏-—Å–æ–ª—å) ‚Äî –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –º–∞–∂–æ—Ä–Ω—ã–π –∞–∫–∫–æ—Ä–¥
    const now = audioCtx.currentTime;
    const notes = [523.25, 659.25, 783.99]; // C5, E5, G5
    const duration = 0.12;

    notes.forEach((freq, i) => {
        try {
            const oscillator = audioCtx.createOscillator();
            const gainNode = audioCtx.createGain();

            oscillator.type = 'sine';
            oscillator.frequency.value = freq;

            // –ü–ª–∞–≤–Ω–æ–µ –∑–∞—Ç—É—Ö–∞–Ω–∏–µ
            gainNode.gain.setValueAtTime(0.15, now + i * 0.08);
            gainNode.gain.exponentialRampToValueAtTime(0.001, now + i * 0.08 + duration);

            oscillator.connect(gainNode);
            gainNode.connect(audioCtx.destination);

            oscillator.start(now + i * 0.08);
            oscillator.stop(now + i * 0.08 + duration);
        } catch (e) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        }
    });
}

function playIncorrectSound() {
    if (!isAudioEnabled) return;
    safePlayTone(200, 0.2, 0.1);
}

function playLevelCompleteSound() {
    if (!isAudioEnabled) return;
    const melody = [523, 659, 784];
    melody.forEach((freq, i) => {
        setTimeout(() => safePlayTone(freq, 0.18, 0.15), i * 200);
    });
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–≥—Ä—ã
const GAME_CONFIG = {
    expPerCorrectAnswer: 10,
    bonusExpPerfect: 50,
    requiredScore: 70,
    expPerLevel: 1000
};

// –î–∞–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–µ–π
const LEVELS = [
    {
        id: 'savings',
        title: '–û—Å–Ω–æ–≤—ã –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π',
        description: '–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥—É—à–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        difficulty: 1,
        reward: 100,
        topic: '–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è',
        icon: 'üí∞',
        questions: [
            {
                question: '–ö–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–æ–¥—É—à–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏?',
                answers: [
                    '1-2 –º–µ—Å—è—Ü–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤',
                    '3-6 –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Ö–æ–¥–æ–≤', 
                    '1 –≥–æ–¥ —Ä–∞—Å—Ö–æ–¥–æ–≤',
                    '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞'
                ],
                correctAnswer: 1,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 3-6 –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ–º–æ–≥–∞–µ—Ç –ø–µ—Ä–µ–∂–∏—Ç—å –ø–æ—Ç–µ—Ä—é —Ä–∞–±–æ—Ç—ã, –±–æ–ª–µ–∑–Ω—å –∏–ª–∏ –¥—Ä—É–≥–∏–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –±–µ–∑ –¥–æ–ª–≥–æ–≤.'
            },
            {
                question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø "–∑–∞–ø–ª–∞—Ç–∏ —Å–Ω–∞—á–∞–ª–∞ —Å–µ–±–µ"?',
                answers: [
                    '–°–Ω–∞—á–∞–ª–∞ —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
                    '–°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å, –ø–æ—Ç–æ–º —Ç—Ä–∞—Ç–∏—Ç—å',
                    '–°–Ω–∞—á–∞–ª–∞ –ø–ª–∞—Ç–∏—Ç—å –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º',
                    '–°–Ω–∞—á–∞–ª–∞ –ø–æ–º–æ–≥–∞—Ç—å —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º'
                ],
                correctAnswer: 1,
                explanation: '–í–µ—Ä–Ω–æ! "–ó–∞–ø–ª–∞—Ç–∏ —Å–Ω–∞—á–∞–ª–∞ —Å–µ–±–µ" - —ç—Ç–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç–µ —á–∞—Å—Ç—å –¥–æ—Ö–æ–¥–∞ –Ω–∞ —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏, –∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–µ–Ω—å–≥–∏ —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ —Ç–µ–∫—É—â–∏–µ –Ω—É–∂–¥—ã.'
            },
            {
                question: '–ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º?',
                answers: [
                    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞ —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç',
                    '–û—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ç–æ, —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞',
                    '–•—Ä–∞–Ω–∏—Ç—å –¥–µ–Ω—å–≥–∏ –¥–æ–º–∞ –≤ –∫–æ–ø–∏–ª–∫–µ',
                    '–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞'
                ],
                correctAnswer: 0,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ–º–æ–≥–∞—é—Ç –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏, –Ω–µ –ø–æ–ª–∞–≥–∞—è—Å—å –Ω–∞ —Å–∏–ª—É –≤–æ–ª–∏ –∏ –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—è "—á—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è".'
            },
            {
                question: '–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç?',
                answers: [
                    '–ß—Ç–æ–±—ã –±–∞–Ω–∫ –ø–ª–∞—Ç–∏–ª –±–æ–ª—å—à–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤',
                    '–ß—Ç–æ–±—ã –¥–µ–Ω—å–≥–∏ –Ω–µ —Å–º–µ—à–∏–≤–∞–ª–∏—Å—å —Å –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏',
                    '–ß—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–µ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å',
                    '–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã'
                ],
                correctAnswer: 3,
                explanation: '–í–µ—Ä–Ω–æ! –û—Ç–¥–µ–ª—å–Ω—ã–π –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–¥–µ–ª—è—Ç—å –¥–µ–Ω—å–≥–∏, –ª—É—á—à–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫ —Ü–µ–ª–∏ –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±–∞–Ω–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –ø–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞ —Ç–∞–∫–∏–µ —Å—á–µ—Ç–∞.'
            },
            {
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ "–ø—Ä–∞–≤–∏–ª–æ 50/30/20" –≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –¥–æ—Ö–æ–¥–æ–≤?',
                answers: [
                    '50% - –Ω–∞–ª–æ–≥–∏, 30% - —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è, 20% - —Ç—Ä–∞—Ç—ã',
                    '50% - –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—Ö–æ–¥—ã, 30% - –∂–µ–ª–∞–Ω–∏—è, 20% - —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è',
                    '50% - –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, 30% - —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è, 20% - —Ç—Ä–∞—Ç—ã',
                    '50% - —Ç—Ä–∞—Ç—ã, 30% - —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è, 20% - –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'
                ],
                correctAnswer: 1,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª–æ 50/30/20 –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç: 50% –¥–æ—Ö–æ–¥–∞ –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—Ö–æ–¥—ã (–∂–∏–ª—å–µ, –µ–¥–∞, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç), 30% –Ω–∞ –∂–µ–ª–∞–Ω–∏—è (—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, —Ö–æ–±–±–∏) –∏ 20% –Ω–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏.'
            }
        ]
    },
    {
        id: 'security',
        title: '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        description: '–ù–∞—É—á–∏—Ç–µ—Å—å –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏ –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∏—Å–∫–æ–≤',
        difficulty: 2,
        reward: 150,
        topic: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        icon: 'üõ°Ô∏è',
        questions: [
            {
                question: '–í–∞–º –∑–≤–æ–Ω—è—Ç –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –±–∞–Ω–∫–∞. –ü—Ä–æ—Å—è—Ç –Ω–∞–∑–≤–∞—Ç—å CVV-–∫–æ–¥ –∫–∞—Ä—Ç—ã –¥–ª—è "–ø—Ä–æ–≤–µ—Ä–∫–∏". –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è?',
                answers: [
                    '–ù–∞–∑–≤–∞—Ç—å –∫–æ–¥, —á—Ç–æ–±—ã –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∫–∞—Ä—Ç–∞ —É –º–µ–Ω—è',
                    '–£—Ç–æ—á–Ω–∏—Ç—å –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –±–∞–Ω–∫–∞ –∏ –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å –ø–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É –Ω–æ–º–µ—Ä—É',
                    '–°–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –∫–∞—Ä—Ç–∞ –Ω–µ –ø—Ä–∏ –º–Ω–µ',
                    '–ù–∞–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ —Ü–∏—Ñ—Ä—ã –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã'
                ],
                correctAnswer: 1,
                explanation: '–í–µ—Ä–Ω–æ! –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ–æ–±—â–∞–π—Ç–µ CVV-–∫–æ–¥, –ø–∞—Ä–æ–ª–∏ –∏ –ø–∏–Ω-–∫–æ–¥—ã. –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –±–∞–Ω–∫–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–∑–≤–∞–Ω–∏–≤–∞–π—Ç–µ –ø–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–∞–º –±–∞–Ω–∫–∞.'
            },
            {
                question: '–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ù–ï–õ–¨–ó–Ø —Å–æ–æ–±—â–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö?',
                answers: [
                    '–¢–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞',
                    '–¢–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã',
                    '–ü–∞—Ä–æ–ª–∏, CVV-–∫–æ–¥, –∫–æ–¥—ã –∏–∑ SMS',
                    '–ú–æ–∂–Ω–æ —Å–æ–æ–±—â–∞—Ç—å –≤—Å–µ, –µ—Å–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∏—Å—å –∏–∑ –±–∞–Ω–∫–∞'
                ],
                correctAnswer: 2,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–∞—Ä–æ–ª–∏, CVV-–∫–æ–¥—ã –∏ –∫–æ–¥—ã –∏–∑ SMS - —ç—Ç–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–ª—å–∑—è –Ω–∏–∫–æ–º—É —Å–æ–æ–±—â–∞—Ç—å, –¥–∞–∂–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –±–∞–Ω–∫–∞.'
            },
            {
                question: '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤—ã –≤—Å–µ-—Ç–∞–∫–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –º–æ—à–µ–Ω–Ω–∏–∫–∞–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã?',
                answers: [
                    '–ù–∏—á–µ–≥–æ, –≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –±—ã–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞',
                    '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –∏ —Å–æ–æ–±—â–∏—Ç—å –≤ –±–∞–Ω–∫',
                    '–ü–æ–º–µ–Ω—è—Ç—å PIN-–∫–æ–¥ –≤ –±–∞–Ω–∫–æ–º–∞—Ç–µ',
                    '–î–æ–∂–¥–∞—Ç—å—Å—è —Å–ø–∏—Å–∞–Ω–∏—è –¥–µ–Ω–µ–≥, –ø–æ—Ç–æ–º –∂–∞–ª–æ–≤–∞—Ç—å—Å—è'
                ],
                correctAnswer: 1,
                explanation: '–í–µ—Ä–Ω–æ! –ü—Ä–∏ –º–∞–ª–µ–π—à–µ–º –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –±–ª–æ–∫–∏—Ä—É–π—Ç–µ –∫–∞—Ä—Ç—É —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞ –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏.'
            },
            {
                question: '–ö–∞–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–∏—à–∏–Ω–≥–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç "–±–∞–Ω–∫–∞"?',
                answers: [
                    '–í –ø–∏—Å—å–º–µ –µ—Å—Ç—å –ª–æ–≥–æ—Ç–∏–ø –±–∞–Ω–∫–∞',
                    '–°—Å—ã–ª–∫–∞ –≤–µ–¥–µ—Ç –Ω–∞ —Å–∞–π—Ç —Å –ø–æ—Ö–æ–∂–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º',
                    '–í –ø–∏—Å—å–º–µ —É–∫–∞–∑–∞–Ω–æ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è',
                    '–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏'
                ],
                correctAnswer: 3,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ—à–µ–Ω–Ω–∏–∫–∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ª–æ–≥–æ—Ç–∏–ø—ã, —Å–æ–∑–¥–∞—é—Ç —Å–∞–π—Ç—ã-–¥–≤–æ–π–Ω–∏–∫–∏ –∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–≤–µ—Ä–∏—è. –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.'
            },
            {
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∑–∞—á–µ–º –æ–Ω–∞ –Ω—É–∂–Ω–∞?',
                answers: [
                    '–≠—Ç–æ –¥–≤–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤—Ö–æ–¥–∞',
                    '–≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ SMS/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                    '–≠—Ç–æ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã –¥–æ—Å—Ç—É–ø–∞',
                    '–≠—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –æ—Ç–ø–µ—á–∞—Ç–∫—É –ø–∞–ª—å—Ü–∞ –∏ –ø–∞—Ä–æ–ª—é'
                ],
                correctAnswer: 1,
                explanation: '–í–µ—Ä–Ω–æ! –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∑–∞—â–∏—Ç—ã - –¥–∞–∂–µ –µ—Å–ª–∏ –º–æ—à–µ–Ω–Ω–∏–∫ —É–∑–Ω–∞–µ—Ç –≤–∞—à –ø–∞—Ä–æ–ª—å, –µ–º—É –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É —Ç–µ–ª–µ—Ñ–æ–Ω—É.'
            }
        ]
    },
    {
        id: 'goals',
        title: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏',
        description: '–ù–∞—É—á–∏—Ç–µ—Å—å —Å—Ç–∞–≤–∏—Ç—å –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏ —Å –ø–æ–º–æ—â—å—é –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è',
        difficulty: 2,
        reward: 120,
        topic: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', 
        icon: 'üéØ',
        questions: [
            {
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ SMART-–∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π?',
                answers: [
                    '–¶–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–æ–∂–Ω—ã–º–∏ –∏ –Ω–µ–¥–æ—Å—Ç–∏–∂–∏–º—ã–º–∏',
                    '–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –∏–∑–º–µ—Ä–∏–º—ã–µ, –¥–æ—Å—Ç–∏–∂–∏–º—ã–µ, —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏',
                    '–¶–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–º–∏',
                    '–≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'
                ],
                correctAnswer: 1,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! SMART - —ç—Ç–æ Specific (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ), Measurable (–∏–∑–º–µ—Ä–∏–º—ã–µ), Achievable (–¥–æ—Å—Ç–∏–∂–∏–º—ã–µ), Relevant (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ), Time-bound (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏).'
            },
            {
                question: '–ö–∞–∫ –ª—É—á—à–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å –¥–æ—Ö–æ–¥ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ü–µ–ª–µ–π?',
                answers: [
                    '–°–Ω–∞—á–∞–ª–∞ –¥–æ—Å—Ç–∏—á—å –æ–¥–Ω—É —Ü–µ–ª—å, –ø–æ—Ç–æ–º –¥—Ä—É–≥—É—é',
                    '–û—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –Ω–∞ –≤—Å–µ —Ü–µ–ª–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—è –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º',
                    '–í–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç –Ω–∞ –≤—Å–µ —Ü–µ–ª–∏ —Å—Ä–∞–∑—É', 
                    '–û—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–º—É—é –ø—Ä–∏—è—Ç–Ω—É—é —Ü–µ–ª—å'
                ],
                correctAnswer: 1,
                explanation: '–í–µ—Ä–Ω–æ! –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Ü–µ–ª—è–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—è –≤–∞–∂–Ω–æ–µ –Ω–∞ –ø–æ—Ç–æ–º.'
            },
            {
                question: '–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –¥–æ—Ö–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏?',
                answers: [
                    '5-10%',
                    '10-20%',
                    '30-50%', 
                    '–°—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç—Ä–∞—Ç'
                ],
                correctAnswer: 1,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å 10-20% –¥–æ—Ö–æ–¥–∞. –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –¥–ª—è –≤–∞—Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ.'
            },
            {
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ "–¥–µ–Ω–µ–∂–Ω–æ–µ –∫–æ–ª—å—Ü–æ" –∏–ª–∏ "–ª–µ—Å—Ç–Ω–∏—Ü–∞ —Ü–µ–ª–µ–π"?',
                answers: [
                    '–°–ø–æ—Å–æ–± —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ–Ω–µ–≥ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö',
                    '–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–π –ø–æ —Å—Ä–æ–∫–∞–º: –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ, —Å—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω—ã–µ, –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ',
                    '–ú–µ—Ç–æ–¥ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∞–∫—Ü–∏–∏',
                    '–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤'
                ],
                correctAnswer: 1,
                explanation: '–í–µ—Ä–Ω–æ! –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–π –ø–æ —Å—Ä–æ–∫–∞–º –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ä–µ—Å—É—Ä—Å—ã –∏ –≤—ã–±–∏—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ü–µ–ª–∏.'
            },
            {
                question: '–ó–∞—á–µ–º –≤–µ—Å—Ç–∏ —É—á–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π?',
                answers: [
                    '–ß—Ç–æ–±—ã —Ö–≤–∞—Å—Ç–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ –¥—Ä—É–∑—å—è–º–∏',
                    '–ß—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω',
                    '–≠—Ç–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –Ω–∞–ª–æ–≥–æ–≤–æ–π —Å–ª—É–∂–±—ã', 
                    '–£—á–µ—Ç –Ω–µ –Ω—É–∂–µ–Ω, –≥–ª–∞–≤–Ω–æ–µ - –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å'
                ],
                correctAnswer: 1,
                explanation: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –†–µ–≥—É–ª—è—Ä–Ω—ã–π —É—á–µ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤–∏–¥–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å, –≤–æ–≤—Ä–µ–º—è –∑–∞–º–µ—á–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π.'
            }
        ]
    }
];

// SVG-–∏–∫–æ–Ω–∫–∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
const LEVEL_ICONS = {
    savings: `
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8">
            <path d="M12 2v20M2 12h20M5 8h14M5 16h14"/>
            <circle cx="12" cy="12" r="9"/>
        </svg>
    `,
    security: `
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8">
            <path d="M12 2L3 7v10c0 5.55 3.84 9 9 9s9-3.45 9-9V7l-9-5z"/>
            <path d="M12 12.5v7M9 11l3-3 3 3"/>
        </svg>
    `,
    goals: `
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8">
            <circle cx="12" cy="12" r="10"/>
            <path d="M12 8v4l2 2"/>
        </svg>
    `
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
let gameState = {
    currentLevel: null,
    currentQuestion: 0,
    score: 0,
    selectedAnswer: null,
    showFeedback: false,
    startTime: null
};

// –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
const ACHIEVEMENTS = {
    first_level: {
        id: 'first_level',
        title: '–ü–µ—Ä–≤—ã–π —à–∞–≥!',
        description: '–ü—Ä–æ–π–¥–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å',
        icon: 'üéØ'
    },
    all_levels: {
        id: 'all_levels', 
        title: '–ú–∞—Å—Ç–µ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤',
        description: '–ü—Ä–æ–π–¥–∏—Ç–µ –≤—Å–µ —É—Ä–æ–≤–Ω–∏',
        icon: 'üèÜ'
    },
    perfect_score: {
        id: 'perfect_score',
        title: '–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!',
        description: '–ù–∞–±–µ—Ä–∏—Ç–µ 100% –≤ –ª—é–±–æ–º —É—Ä–æ–≤–Ω–µ',
        icon: '‚≠ê'
    },
    exp_500: {
        id: 'exp_500',
        title: '–û–ø—ã—Ç–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–æ—Ä',
        description: '–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 500 –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞',
        icon: 'üíº'
    },
    fast_learner: {
        id: 'fast_learner',
        title: '–ë—ã—Å—Ç—Ä—ã–π —É—á–µ–Ω–∏–∫',
        description: '–ü—Ä–æ–π–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 2 –º–∏–Ω—É—Ç—ã',
        icon: '‚ö°'
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initGame();
});

function initGame() {
    simulateLoading(() => {
        loadProgress();
        showScreen('main-menu');
        updateUserStats();
        setupEventListeners();
        registerServiceWorker();
    });
}

function simulateLoading(callback) {
    let progress = 0;
    const progressBar = document.getElementById('loading-progress');
    const interval = setInterval(() => {
        progress += Math.random() * 15;
        if (progress >= 100) {
            progress = 100;
            clearInterval(interval);
            setTimeout(callback, 500);
        }
        progressBar.style.width = `${progress}%`;
    }, 200);
}

function setupEventListeners() {
    // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∑–≤—É–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
    const enableAudio = () => {
        initSafeAudio();
        document.body.removeEventListener('click', enableAudio);
        document.body.removeEventListener('touchstart', enableAudio);
    };
    document.body.addEventListener('click', enableAudio, { once: true, passive: true });
    document.body.addEventListener('touchstart', enableAudio, { once: true, passive: true });

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    document.getElementById('profile-btn').addEventListener('click', () => showScreen('profile-screen'));
    document.getElementById('profile-back-btn').addEventListener('click', () => showScreen('main-menu'));
    document.getElementById('back-btn').addEventListener('click', () => showScreen('main-menu'));
    document.getElementById('menu-btn').addEventListener('click', () => showScreen('main-menu'));
    document.getElementById('help-btn').addEventListener('click', () => showScreen('help-screen'));
    document.getElementById('help-back-btn').addEventListener('click', () => showScreen('main-menu'));
    
    // –ò–≥—Ä–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    document.getElementById('play-again-btn').addEventListener('click', restartLevel);
    document.getElementById('reset-progress-btn').addEventListener('click', resetProgress);
    document.getElementById('export-data-btn').addEventListener('click', exportData);

    // –ó–∞–ø—É—Å–∫ —É—Ä–æ–≤–Ω–µ–π –ø–æ –Ω–æ–≤—ã–º –∫–Ω–æ–ø–∫–∞–º
    document.querySelectorAll('.level-start-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const levelId = this.closest('.level-card').dataset.level;
            startLevel(levelId);
        });
    });
}

function registerServiceWorker() {
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/service-worker.js')
            .then(registration => {
                console.log('Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration);
            })
            .catch(error => {
                console.log('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', error);
            });
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
    
    if (screenId === 'profile-screen') {
        renderProfile();
    }
}

function showNotification(message, duration = 3000) {
    const notification = document.getElementById('notification');
    const notificationText = document.getElementById('notification-text');
    
    notificationText.textContent = message;
    notification.classList.remove('hidden');
    
    setTimeout(() => {
        notification.classList.add('hidden');
    }, duration);
}

// –†–∞–±–æ—Ç–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
function loadProgress() {
    const saved = localStorage.getItem('financialGameProgress');
    if (saved) {
        window.gameProgress = JSON.parse(saved);
    } else {
        window.gameProgress = {
            totalExp: 0,
            userLevel: 1,
            levels: {},
            achievements: [],
            completedLevels: 0,
            playCount: 0,
            totalPlayTime: 0
        };
        saveProgress();
    }
}

function saveProgress() {
    localStorage.setItem('financialGameProgress', JSON.stringify(window.gameProgress));
}

function resetProgress() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
        window.gameProgress = {
            totalExp: 0,
            userLevel: 1,
            levels: {},
            achievements: [],
            completedLevels: 0,
            playCount: 0,
            totalPlayTime: 0
        };
        saveProgress();
        updateUserStats();
        renderProfile();
        showScreen('main-menu');
        showNotification('–ü—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!');
    }
}

function exportData() {
    const dataStr = JSON.stringify(window.gameProgress, null, 2);
    const dataBlob = new Blob([dataStr], {type: 'application/json'});
    
    const url = URL.createObjectURL(dataBlob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `financial-game-progress-${new Date().toISOString().split('T')[0]}.json`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
    
    showNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
}

// –ó–∞–ø—É—Å–∫ —É—Ä–æ–≤–Ω—è
function startLevel(levelId) {
    const level = LEVELS.find(l => l.id === levelId);
    if (!level) return;
    
    gameState.currentLevel = level;
    gameState.currentQuestion = 0;
    gameState.score = 0;
    gameState.selectedAnswer = null;
    gameState.showFeedback = false;
    gameState.startTime = Date.now();
    
    window.gameProgress.playCount = (window.gameProgress.playCount || 0) + 1;
    saveProgress();
    
    document.getElementById('level-title').textContent = level.title;
    document.getElementById('level-topic').textContent = level.topic;
    showScreen('level-screen');
    renderQuestion();
}

function renderQuestion() {
    const question = gameState.currentLevel.questions[gameState.currentQuestion];
    const progress = ((gameState.currentQuestion + 1) / gameState.currentLevel.questions.length) * 100;
    
    document.getElementById('progress-fill').style.width = `${progress}%`;
    document.getElementById('level-progress').textContent = 
        `–í–æ–ø—Ä–æ—Å ${gameState.currentQuestion + 1}/${gameState.currentLevel.questions.length}`;
    
    const container = document.getElementById('question-container');
    container.innerHTML = `
        <div class="question-text">${question.question}</div>
        <div class="answers-list">
            ${question.answers.map((answer, index) => `
                <button class="answer-btn" onclick="selectAnswer(${index})">
                    ${answer}
                </button>
            `).join('')}
        </div>
    `;
    
    document.getElementById('feedback').classList.add('hidden');
}

function selectAnswer(answerIndex) {
    if (gameState.showFeedback) return;
    
    gameState.selectedAnswer = answerIndex;
    gameState.showFeedback = true;
    
    const question = gameState.currentLevel.questions[gameState.currentQuestion];
    const isCorrect = answerIndex === question.correctAnswer;
    
    // üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
    if (isCorrect) {
        gameState.score++;
        playCorrectSound();
    } else {
        playIncorrectSound();
    }
    
    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
    const answerButtons = document.querySelectorAll('.answer-btn');
    answerButtons.forEach((btn, index) => {
        btn.disabled = true;
        if (index === question.correctAnswer) {
            btn.classList.add('correct');
        } else if (index === answerIndex && !isCorrect) {
            btn.classList.add('incorrect');
        }
    });
    
    // –ü–æ–∫–∞–∑ —Ñ–∏–¥–±–µ–∫–∞
    const feedback = document.getElementById('feedback');
    const feedbackIcon = document.getElementById('feedback-icon');
    const feedbackText = document.getElementById('feedback-text');
    
    feedback.className = `feedback ${isCorrect ? 'correct' : 'incorrect'}`;
    feedbackIcon.textContent = isCorrect ? '‚úÖ' : '‚ùå';
    feedbackText.textContent = question.explanation;
    feedback.classList.remove('hidden');
    
    document.getElementById('next-btn').onclick = nextQuestion;
}

function nextQuestion() {
    gameState.currentQuestion++;
    gameState.selectedAnswer = null;
    gameState.showFeedback = false;
    
    if (gameState.currentQuestion < gameState.currentLevel.questions.length) {
        renderQuestion();
    } else {
        finishLevel();
    }
}

function finishLevel() {
    const level = gameState.currentLevel;
    const totalQuestions = level.questions.length;
    const scorePercentage = Math.round((gameState.score / totalQuestions) * 100);
    const expEarned = gameState.score * GAME_CONFIG.expPerCorrectAnswer;
    const isPerfect = gameState.score === totalQuestions;
    const bonusExp = isPerfect ? GAME_CONFIG.bonusExpPerfect : 0;
    const totalExp = expEarned + bonusExp + level.reward;
    
    const timeSpent = Math.round((Date.now() - gameState.startTime) / 1000);
    window.gameProgress.totalPlayTime = (window.gameProgress.totalPlayTime || 0) + timeSpent;
    
    const levelProgress = window.gameProgress.levels[level.id] || { 
        completed: false, 
        bestScore: 0,
        playCount: 0,
        totalTime: 0
    };
    
    levelProgress.playCount = (levelProgress.playCount || 0) + 1;
    levelProgress.totalTime = (levelProgress.totalTime || 0) + timeSpent;
    levelProgress.lastScore = scorePercentage;
    
    if (scorePercentage >= GAME_CONFIG.requiredScore) {
        levelProgress.completed = true;
        if (scorePercentage > levelProgress.bestScore) {
            levelProgress.bestScore = scorePercentage;
        }
        if (!window.gameProgress.levels[level.id]?.completed) {
            window.gameProgress.completedLevels++;
            checkAchievements('first_level');
        }
    }
    
    window.gameProgress.levels[level.id] = levelProgress;
    window.gameProgress.totalExp += totalExp;
    
    if (isPerfect) checkAchievements('perfect_score');
    if (timeSpent < 120) checkAchievements('fast_learner');
    if (window.gameProgress.totalExp >= 500) checkAchievements('exp_500');
    if (window.gameProgress.completedLevels >= LEVELS.length) checkAchievements('all_levels');
    
    const newUserLevel = Math.floor(window.gameProgress.totalExp / GAME_CONFIG.expPerLevel) + 1;
    if (newUserLevel > window.gameProgress.userLevel) {
        window.gameProgress.userLevel = newUserLevel;
        showNotification(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ ${newUserLevel} —É—Ä–æ–≤–Ω—è!`);
    }
    
    saveProgress();
    
    // üîä –ó–≤—É–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏
    if (scorePercentage >= GAME_CONFIG.requiredScore) {
        playLevelCompleteSound();
    }
    
    showResults(scorePercentage, totalExp, bonusExp, isPerfect, timeSpent);
}

function showResults(score, expEarned, bonusExp, isPerfect, timeSpent) {
    const levelProgress = window.gameProgress.levels[gameState.currentLevel.id];
    const bestScore = levelProgress.bestScore;
    
    document.getElementById('result-icon').textContent = score >= GAME_CONFIG.requiredScore ? 'üéâ' : 'üòî';
    document.getElementById('result-title').textContent = 
        score >= GAME_CONFIG.requiredScore ? '–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–π–¥–µ–Ω!' : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑';
    document.getElementById('correct-answers').textContent = `${gameState.score}/${gameState.currentLevel.questions.length}`;
    document.getElementById('exp-earned').textContent = `+${expEarned}${bonusExp ? ` (+${bonusExp} –±–æ–Ω—É—Å)` : ''}`;
    document.getElementById('best-score').textContent = `${bestScore}%`;
    
    const achievementsContainer = document.getElementById('achievements');
    achievementsContainer.innerHTML = '';
    
    let newAchievements = 0;
    
    if (isPerfect) {
        const achievement = createAchievementElement(ACHIEVEMENTS.perfect_score, true);
        achievementsContainer.appendChild(achievement);
        newAchievements++;
    }
    
    if (!window.gameProgress.levels[gameState.currentLevel.id]?.completed && score >= GAME_CONFIG.requiredScore) {
        const achievement = createAchievementElement(ACHIEVEMENTS.first_level, true);
        achievementsContainer.appendChild(achievement);
        newAchievements++;
    }
    
    const achievementsSection = document.getElementById('achievements-container');
    achievementsSection.style.display = newAchievements > 0 ? 'block' : 'none';
    
    if (newAchievements > 0) {
        showNotification(`üéñÔ∏è –ü–æ–ª—É—á–µ–Ω–æ ${newAchievements} –Ω–æ–≤${newAchievements === 1 ? '–æ–µ' : '—ã—Ö'} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è!`);
    }
    
    showScreen('results-screen');
}

function createAchievementElement(achievement, isNew = false) {
    const div = document.createElement('div');
    div.className = `achievement ${isNew ? 'achievement-new' : ''}`;
    div.innerHTML = `
        <div style="display: flex; align-items: center;">
            <span class="achievement-icon">${achievement.icon}</span>
            <div>
                <div class="achievement-title">${achievement.title}</div>
                <div class="achievement-desc">${achievement.description}</div>
            </div>
        </div>
    `;
    return div;
}

function checkAchievements(achievementId) {
    if (!window.gameProgress.achievements.includes(achievementId)) {
        window.gameProgress.achievements.push(achievementId);
        saveProgress();
        return true;
    }
    return false;
}

function restartLevel() {
    startLevel(gameState.currentLevel.id);
}

function updateUserStats() {
    document.getElementById('total-exp').textContent = window.gameProgress.totalExp;
    document.getElementById('completed-levels').textContent = window.gameProgress.completedLevels;
    document.getElementById('user-level').textContent = window.gameProgress.userLevel;
}

function renderProfile() {
    document.getElementById('profile-total-exp').textContent = window.gameProgress.totalExp;
    document.getElementById('profile-levels-completed').textContent = window.gameProgress.completedLevels;
    document.getElementById('profile-achievements').textContent = window.gameProgress.achievements.length;

    const levelsList = document.getElementById('profile-levels-list');
    levelsList.innerHTML = "";

    LEVELS.forEach(level => {
        const progress = window.gameProgress.levels[level.id] || {};
        const avgTime = progress.playCount ? Math.round(progress.totalTime / progress.playCount) : 0;
        const iconHTML = LEVEL_ICONS[level.id] || '‚ùì';

        const levelElement = document.createElement('div');
        levelElement.className = 'profile-level';
        levelElement.innerHTML = `
            <div class="level-info">
                <div class="level-name">
                    <span class="profile-level-icon">${iconHTML}</span>
                    ${level.title}
                    <span class="level-difficulty">${'‚òÖ'.repeat(level.difficulty)}</span>
                </div>
                <div class="level-score">
                    ${progress.completed ?
                        `–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${progress.bestScore}% | –ò–≥—Ä: ${progress.playCount || 0}` :
                        '–ï—â–µ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω'}
                    ${avgTime ? ` | –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${avgTime}—Å` : ''}
                </div>
            </div>
            <div class="level-status">
                ${progress.completed ? '‚úÖ' : '‚ùå'}
            </div>
        `;
        levelsList.appendChild(levelElement);
    });

    const totalPlayTime = window.gameProgress.totalPlayTime || 0;
    const totalPlayCount = window.gameProgress.playCount || 0;

    if (totalPlayCount > 0) {
        const statsInfo = document.createElement('div');
        statsInfo.className = 'help-section';
        statsInfo.innerHTML = `
            <h3>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <p>–í—Å–µ–≥–æ —Å—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: <strong>${totalPlayCount}</strong></p>
            <p>–û–±—â–µ–µ –≤—Ä–µ–º—è –∏–≥—Ä—ã: <strong>${Math.round(totalPlayTime / 60)} –º–∏–Ω—É—Ç</strong></p>
            <p>–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ –∏–≥—Ä—É: <strong>${Math.round(totalPlayTime / totalPlayCount)} —Å–µ–∫—É–Ω–¥</strong></p>
        `;
        levelsList.parentNode.insertBefore(statsInfo, levelsList.nextSibling);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è HTML
window.startLevel = startLevel;
window.selectAnswer = selectAnswer;
